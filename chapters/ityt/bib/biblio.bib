@inproceedings{kiayias2002breaking,
  title={Breaking and repairing asymmetric public-key traitor tracing},
  author={Kiayias, Aggelos and Yung, Moti},
  booktitle={ACM Workshop on Digital Rights Management},
  pages={32--50},
  year={2002},
  organization={Springer}
}

@misc{cryptoeprint:2017:189,
    author = {Xiao Wang and Samuel Ranellucci and Jonathan Katz},
    title = {Global-Scale Secure Multiparty Computation},
    howpublished = {Cryptology ePrint Archive, Report 2017/189},
    year = {2017},
    note = {\url{https://eprint.iacr.org/2017/189}},
}

@misc{cryptoeprint:2017:875,
    author = {Iddo Bentov and Ranjit Kumaresan and Andrew Miller},
    title = {Instantaneous Decentralized Poker},
    howpublished = {Cryptology ePrint Archive, Report 2017/875},
    year = {2017},
    note = {\url{https://eprint.iacr.org/2017/875}},
}

@inproceedings{baum2014publicly,
  title={Publicly auditable secure multi-party computation},
  author={Baum, Carsten and Damg{\aa}rd, Ivan and Orlandi, Claudio},
  booktitle={International Conference on Security and Cryptography for Networks},
  pages={175--196},
  year={2014},
  organization={Springer}
}

@article{muchain,
  title={$\mu$chain: How to Forget without Hard Forks.},
  author={Puddu, Ivan and Dmitrienko, Alexandra and Capkun, Srdjan}
}

@misc{gwern,
	title = {Time-Lock Encryption},
	author = {Branwen, Gwern},
	year = {2018},
	howpublished = {\url{https://www.gwern.net/Self-decrypting-files}},
	note = {Accessed: 2019-28-01}
}

@misc{bitcoin-reward,
	title = {Reward offered for hash collisions for {SHA1}, {SHA256}, {RIPEMD160} and others},
	author = {Todd, Peter},
	howpublished = {\url{https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-September/003253.html}},
	year = {2013},
	note = {Accessed: 2019-28-01}
}

@inproceedings{philippe2002keo,
	title={KEO, the Archeological Bird of the Future},
	author={Philippe, Jean-Marc},
	booktitle={IAF abstracts, 34th COSPAR Scientific Assembly},
	year={2002}
}

@article{jager2015build,
	title={How to Build Time-Lock Encryption.},
	author={Jager, Tibor},
	journal={IACR Cryptology ePrint Archive},
	volume={2015},
	pages={478},
	year={2015},
	publisher={Citeseer}
}

@article{DBLP:journals/corr/abs-1804-03548,
	author    = {Marcel von Maltitz and
	Georg Carle},
	title     = {A Performance and Resource Consumption Assessment of Secure Multiparty
	Computation},
	journal   = {CoRR},
	volume    = {abs/1804.03548},
	year      = {2018},
	url       = {http://arxiv.org/abs/1804.03548},
	archivePrefix = {arXiv},
	eprint    = {1804.03548},
}

@techreport{Rivest:1996:TPT:888615,
	author = {Ronald L. Rivest and Adi Shamir and David A. Wagner},
	title = {Time-lock Puzzles and Timed-release Crypto},
	year = {1996},
	publisher = {Massachusetts Institute of Technology},
	address = {Cambridge, MA, USA},
} 

@article{dictionary1989oxford,
	title={Oxford english dictionary},
	author={Dictionary, Oxford English},
	journal={Simpson, JA \& Weiner, ESC},
	year={1989}
}

@INPROCEEDINGS{yao82, 
 author = {Yao, Andrew C.},
 title = {Protocols for Secure Computations},
 booktitle = {Proceedings of the 23rd Annual Symposium on Foundations of Computer Science},
 series = {SFCS '82},
 year = {1982},
 pages = {160--164},
 numpages = {5},
 acmid = {1382751},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
} 

@INPROCEEDINGS{yao86, 
 author = {Yao, Andrew C.},
 title = {How to Generate and Exchange Secrets},
 booktitle = {Proceedings of the 27th Annual Symposium on Foundations of Computer Science},
 series = {SFCS '86},
 year = {1986},
 isbn = {0-8186-0740-8},
 pages = {162--167},
 numpages = {6},
 acmid = {1382944},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
} 

@InProceedings{10.1007/978-3-642-22792-9_3,
	author="Mahmoody, Mohammad
	and Moran, Tal
	and Vadhan, Salil",
	editor="Rogaway, Phillip",
	title="Time-Lock Puzzles in the Random Oracle Model",
	booktitle="Advances in Cryptology -- CRYPTO 2011",
	year="2011",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="39--50",
	abstract="A time-lock puzzle is a mechanism for sending messages ``to the future''. The sender publishes a puzzle whose solution is the message to be sent, thus hiding it until enough time has elapsed for the puzzle to be solved. For time-lock puzzles to be useful, generating a puzzle should take less time than solving it. Since adversaries may have access to many more computers than honest solvers, massively parallel solvers should not be able to produce a solution much faster than serial ones.",
	isbn="978-3-642-22792-9"
}

@inproceedings{Bitansky:2016:TPR:2840728.2840745,
	author = {Bitansky, Nir and Goldwasser, Shafi and Jain, Abhishek and Paneth, Omer and Vaikuntanathan, Vinod and Waters, Brent},
	title = {Time-Lock Puzzles from Randomized Encodings},
	booktitle = {Proceedings of the 2016 ACM Conference on Innovations in Theoretical Computer Science},
	series = {ITCS '16},
	year = {2016},
	isbn = {978-1-4503-4057-1},
	location = {Cambridge, Massachusetts, USA},
	pages = {345--356},
	numpages = {12},
	acmid = {2840745},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {proofs of work, randomized encodings, time-lock puzzles},
} 

@InProceedings{spdz,
	author="Damg{\aa}rd, Ivan
	and Keller, Marcel
	and Larraia, Enrique
	and Pastro, Valerio
	and Scholl, Peter
	and Smart, Nigel P.",
	editor="Crampton, Jason
	and Jajodia, Sushil
	and Mayes, Keith",
	title="Practical Covertly Secure MPC for Dishonest Majority -- Or: Breaking the SPDZ Limits",
	booktitle="Computer Security -- ESORICS 2013",
	year="2013",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="1--18",
	abstract="SPDZ (pronounced ``Speedz'') is the nickname of the MPC protocol of Damg{\aa}rd et al. from Crypto 2012. In this paper we both resolve a number of open problems with SPDZ; and present several theoretical and practical improvements to the protocol. In detail, we start by designing and implementing a covertly secure key generation protocol for obtaining a BGV public key and a shared associated secret key. We then construct both a covertly and actively secure preprocessing phase, both of which compare favourably with previous work in terms of efficiency and provable security.",
	isbn="978-3-642-40203-6"
}

@inproceedings{mascot,
	author = {Keller, Marcel and Orsini, Emmanuela and Scholl, Peter},
	title = {MASCOT: Faster Malicious Arithmetic Secure Computation with Oblivious Transfer},
	booktitle = {Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security},
	series = {CCS '16},
	year = {2016},
	isbn = {978-1-4503-4139-4},
	location = {Vienna, Austria},
	pages = {830--842},
	numpages = {13},
	acmid = {2978357},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {multi-party computation, oblivious transfer},
} 

@article{rabin2005exchange,
	title={How To Exchange Secrets with Oblivious Transfer.},
	author={Rabin, Michael O},
	journal={IACR Cryptology ePrint Archive},
	volume={2005},
	pages={187},
	year={2005}
}

@inproceedings{keller2018overdrive,
	title={Overdrive: making SPDZ great again},
	author={Keller, Marcel and Pastro, Valerio and Rotaru, Dragos},
	booktitle={Annual International Conference on the Theory and Applications of Cryptographic Techniques},
	pages={158--189},
	year={2018},
	organization={Springer}
}

@article{Shamir:1979:SS:359168.359176,
	author = {Shamir, Adi},
	title = {How to Share a Secret},
	journal = {Commun. ACM},
	volume = {22},
	number = {11},
	month = nov,
	year = {1979},
	issn = {0001-0782},
	pages = {612--613},
	numpages = {2},
	acmid = {359176},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {cryptography, interpolation, key management},
} 

@InProceedings{10.1007/3-540-45682-1_30,
	author="Boneh, Dan
	and Lynn, Ben
	and Shacham, Hovav",
	editor="Boyd, Colin",
	title="Short Signatures from the Weil Pairing",
	booktitle="Advances in Cryptology --- ASIACRYPT 2001",
	year="2001",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="514--532",
	abstract="We introduce a short signature scheme based on the Computational Diffie-Hellman assumption on certain elliptic and hyper-elliptic curves. The signature length is half the size of a DSA signature for a similar level of security. Our short signature scheme is designed for systems where signatures are typed in by a human or signatures are sent over a low-bandwidth channel.",
	isbn="978-3-540-45682-7"
}

@article{poon2016bitcoin,
	title={The bitcoin lightning network: Scalable off-chain instant payments},
	author={Poon, Joseph and Dryja, Thaddeus},
	pages={14},
	year={2016}
}

@article{enigma,
	title={Enigma: Decentralized computation platform with guaranteed privacy},
	author={Zyskind, Guy and Nathan, Oz and Pentland, Alex},
	journal={arXiv:1506.03471},
	year={2015}
}

@inproceedings{hawk,
	title={Hawk: The blockchain model of cryptography and privacy-preserving smart contracts},
	author={Kosba, Ahmed and Miller, Andrew and Shi, Elaine and Wen, Zikai and Papamanthou, Charalampos},
	booktitle={Security and Privacy (SP), 2016 IEEE Symposium on},
	pages={839--858},
	year={2016},
	organization={IEEE}
}

@inproceedings{zk,
	title={Non-interactive zero-knowledge proof of knowledge and chosen ciphertext attack},
	author={Rackoff, Charles and Simon, Daniel R},
	booktitle={Annual International Cryptology Conference},
	pages={433--444},
	year={1991},
	organization={Springer}
}

@InProceedings{damgaard2016mpc,
	author="Damg{\aa}rd, Ivan
	and Damg{\aa}rd, Kasper
	and Nielsen, Kurt
	and Nordholt, Peter Sebastian
	and Toft, Tomas",
	editor="Grossklags, Jens
	and Preneel, Bart",
	title="Confidential Benchmarking Based on Multiparty Computation",
	booktitle="Financial Cryptography and Data Security",
	year="2017",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="169--187",
	abstract="We report on the design and implementation of a system that uses multiparty computation to enable banks to benchmark their customers' confidential performance data against a large representative set of confidential performance data from a consultancy house. The system ensures that both the banks' and the consultancy house's data stays confidential, the banks as clients learn nothing but the computed benchmarking score. In the concrete business application, the developed prototype helps Danish banks to find the most efficient customers among a large and challenging group of agricultural customers with too much debt. We propose a model based on linear programming for doing the benchmarking and implement it using the SPDZ protocol by Damg{\aa}rd et al., which we modify using a new idea that allows clients to supply data and get output without having to participate in the preprocessing phase and without keeping state during the computation. We ran the system with two servers doing the secure computation using a database with information on about 2500 users. Answers arrived in about 25 s.",
	isbn="978-3-662-54970-4"
}

@article{wood2014ethereum,
	title={Ethereum: A secure decentralised generalised transaction ledger},
	author={Wood, Gavin},
	journal={Ethereum project yellow paper},
	volume={151},
	pages={1--32},
	year={2014}
}

@InProceedings{poet,
	author="Chen, Lin
	and Xu, Lei
	and Shah, Nolan
	and Gao, Zhimin
	and Lu, Yang
	and Shi, Weidong",
	editor="Spirakis, Paul
	and Tsigas, Philippas",
	title="On Security Analysis of Proof-of-Elapsed-Time (PoET)",
	booktitle="Stabilization, Safety, and Security of Distributed Systems",
	year="2017",
	publisher="Springer International Publishing",
	address="Cham",
	pages="282--297",
	abstract="As more applications are built on top of blockchain and public ledger, different approaches are developed to improve the performance of blockchain construction. Recently Intel proposed a new concept of proof-of-elapsed-time (PoET), which leverages trusted computing to enforce random waiting times for block construction. However, trusted computing component may not be perfect and 100{\%} reliable. It is not clear, to what extent, blockchain systems based on PoET can tolerate failures of trusted computing component. The current design of PoET lacks rigorous security analysis and a theoretical foundation for assessing its strength against such attacks. To fulfill this gap, we develop a theoretical framework for evaluating a PoET based blockchain system, and show that the current design is vulnerable in the sense that adversary can jeopardize the blockchain system by only compromising {\$}{\$}{\backslash}varTheta ({\backslash}log {\backslash}log n/{\backslash}log n){\$}{\$}fraction of the participating nodes, which is very small when n is relatively large. Based on our theoretical analysis, we also propose methods to mitigate these vulnerabilities.",
	isbn="978-3-319-69084-1"
}

@misc{hyperledger-sawtooth,
	title = {{Hyperledger Sawtooth}},
	author = {Hyperledger Foundation},
	howpublished = {\url{https://sawtooth.hyperledger.org}},
	year = {2018},
	note = {Accessed: 2019-28-01}
}

@misc{kimono,
	title = {Kimono --- trustless secret sharing using time-locks on Ethereum},
	author = {Fletcher-Hill, Paul},
	howpublished = {\url{https://medium.com/@pfh/kimono-trustless-secret-sharing-using-time-locks-on-ethereum-8e7e696494d}},
	year = {2018},
	note = {Accessed: 2019-28-01}
}

@misc{may1993timed,
	title={Timed-release crypto},
	author={May, Timothy},
	howpublished = {\url{http://www.hks.net/cpunks/cpunks-0/1560.html}},
	year={1993}
}

@article{szabo1997formalizing,
	title={Formalizing and securing relationships on public networks},
	author={Szabo, Nick},
	journal={First Monday},
	volume={2},
	number={9},
	year={1997}
}

@article{nakamoto2008,
	title={Bitcoin: A peer-to-peer electronic cash system},
	author={Nakamoto, Satoshi and others},
	year={2008},
	publisher={Working Paper}
}

@InProceedings{pow,
	author="Dwork, Cynthia
	and Naor, Moni",
	editor="Brickell, Ernest F.",
	title="Pricing via Processing or Combatting Junk Mail",
	booktitle="Advances in Cryptology --- CRYPTO' 92",
	year="1993",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="139--147",
	abstract="We present a computational technique for combatting junk mail in particular and controlling access to a shared resource in general. The main idea is to require a user to compute a moderately hard, but not intractable, function in order to gain access to the resource, thus preventing frivolous use. To this end we suggest several pricing functions, based on, respectively, extracting square roots modulo a prime, the Fiat-Shamir signature scheme, and the Ong-Schnorr-Shamir (cracked) signature scheme.",
	isbn="978-3-540-48071-6"
}

@inproceedings{posw,
	title={Publicly verifiable proofs of sequential work},
	author={Mahmoody, Mohammad and Moran, Tal and Vadhan, Salil},
	booktitle={Proceedings of the 4th conference on Innovations in Theoretical Computer Science},
	pages={373--388},
	year={2013},
	organization={ACM}
}

@InProceedings{cohen2018,
	author="Cohen, Bram
	and Pietrzak, Krzysztof",
	editor="Nielsen, Jesper Buus
	and Rijmen, Vincent",
	title="Simple Proofs of Sequential Work",
	booktitle="Advances in Cryptology -- EUROCRYPT 2018 ",
	year="2018",
	publisher="Springer International Publishing",
	address="Cham",
	pages="451--467",
	abstract="At ITCS 2013, Mahmoody, Moran and Vadhan [MMV13] introduce and construct publicly verifiable proofs of sequential work, which is a protocol for proving that one spent sequential computational work related to some statement. The original motivation for such proofs included non-interactive time-stamping and universally verifiable CPU benchmarks. A more recent application, and our main motivation, are blockchain designs, where proofs of sequential work can be used -- in combination with proofs of space -- as a more ecological and economical substitute for proofs of work which are currently used to secure Bitcoin and other cryptocurrencies.",
	isbn="978-3-319-78375-8"
}

@InProceedings{mahmoody-tl,
	author="Mahmoody, Mohammad
	and Moran, Tal
	and Vadhan, Salil",
	editor="Rogaway, Phillip",
	title="Time-Lock Puzzles in the Random Oracle Model",
	booktitle="Advances in Cryptology -- CRYPTO 2011",
	year="2011",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="39--50",
	abstract="A time-lock puzzle is a mechanism for sending messages ``to the future''. The sender publishes a puzzle whose solution is the message to be sent, thus hiding it until enough time has elapsed for the puzzle to be solved. For time-lock puzzles to be useful, generating a puzzle should take less time than solving it. Since adversaries may have access to many more computers than honest solvers, massively parallel solvers should not be able to produce a solution much faster than serial ones.",
	isbn="978-3-642-22792-9"
}

@Article{jager2018,
	author="Liu, Jia
	and Jager, Tibor
	and Kakvi, Saqib A.
	and Warinschi, Bogdan",
	title="How to build time-lock encryption",
	journal="Designs, Codes and Cryptography",
	year="2018",
	month="Nov",
	volume="86",
	number="11",
	pages="2549--2586",
	abstract="Time-lock encryption is a method to encrypt a message such that it can only be decrypted after a certain deadline has passed. We propose a novel time-lock encryption scheme, whose main advantage over prior constructions is that even receivers with relatively weak computational resources should immediately be able to decrypt after the deadline, without any interaction with the sender, other receivers, or a trusted third party. We build our time-lock encryption on top of the new concept of computational reference clocks and an extractable witness encryption scheme. We explain how to construct a computational reference clock based on Bitcoin. We show how to achieve constant level of multilinearity for witness encryption by using SNARKs. We propose a new construction of a witness encryption scheme which is of independent interest: our scheme, based on Subset-Sum, achieves extractable security without relying on obfuscation. The scheme employs multilinear maps of arbitrary order and is independent of the implementations of multilinear maps.",
	issn="1573-7586",
}

@article{rabin2006time,
	title={Time-lapse cryptography},
	author={Rabin, Michael O and Thorpe, Christopher},
	year={2006}
}

@INPROCEEDINGS{dht,
	author={Li, Chao and Palanisamy, Balaji},
	booktitle={2017 IEEE 37th International Conference on Distributed Computing Systems (ICDCS)},
	title={Timed-Release of Self-Emerging Data Using Distributed Hash Tables},
	year={2017},
	volume={},
	number={},
	pages={2344-2351},
	abstract={Releasing private data to the future is a challenging problem. Making private data accessible at a future point in time requires mechanisms to keep data secure and undiscovered so that protected data is not available prior to the legitimate release time and the data appears automatically at the expected release time. In this paper, we develop new mechanisms to support self-emerging data storage that securely hide keys of encrypted data in a Distributed Hash Table (DHT) network that makes the encryption keys automatically appear at the predetermined release time so that the protected encrypted private data can be decrypted at the release time. We show that a straight-forward approach of privately storing keys in a DHT is prone to a number of attacks that could either make the hidden data appear before the prescribed release time (release-ahead attack) or destroy the hidden data altogether (drop attack). We develop a suite of self-emerging key routing mechanisms for securely storing and routing encryption keys in the DHT. We show that the proposed scheme is resilient to both release-ahead attack and drop attack as well as to attacks that arise due to traditional churn issues in DHT networks. Our experimental evaluation demonstrates the performance of the proposed schemes in terms of attack resilience and churn resilience.},
	keywords={data protection;private key cryptography;public key cryptography;storage management;self-emerging data timed-release;distributed hash tables;self-emerging data storage;encryption keys;encrypted private data protection;decryption;self-emerging key routing mechanisms;release-ahead attack;drop attack;DHT networks;attack resilience;churn resilience;Routing;Encryption;Resilience;Receivers;Distributed databases;Data models;private data timed release;distributed hash table;DHT;distributed system},
	ISSN={1063-6927},
	month={June},}

@INPROCEEDINGS{self-emerging1,
	author={Li, Chao and Palanisamy, Balaji},
	booktitle={2018 IEEE 37th Symposium on Reliable Distributed Systems (SRDS)},
	title={Decentralized Release of Self-Emerging Data using Smart Contracts},
	year={2018},
	volume={},
	number={},
	pages={213-220},
	abstract={In the age of Big Data, releasing protected sensitive data at a future point in time is critical for various applications. Such self-emerging data release requires the data to be protected until a prescribed data release time and be automatically released to the recipient at the release time, even if the data sender goes offline. While straight-forward centralized approaches provide a basic solution to the problem, unfortunately they are limited to a single point of trust and involve a single point of control. This paper presents decentralized techniques for supporting self-emerging data using smart contracts in Ethereum blockchain networks. We design a credible and enforceable smart contract for supporting self-emerging data release. The smart contract employs a set of Ethereum peers to jointly follow the proposed timed-release service protocol allowing the participating peers to earn the remuneration paid by the service users. We model the problem as an extensive-form game with imperfect information to protect against possible adversarial attacks including some peers destroying the private data (drop attack) or secretly releasing the private data before the release time (release-ahead attack). We demonstrate the efficacy and attack-resilience of the proposed techniques through rigorous analysis and experimental evaluation. Our implementation and experimental evaluation on the Ethereum official test network demonstrate the low monetary cost and the low time overhead associated with the proposed approach and validate its guaranteed security properties.},
	keywords={contracts;cryptography;data protection;distributed databases;game theory;protocols;straight-forward centralized approaches;private data;Big Data;sensitive data protection;self-emerging data;smart contract;Ethereum blockchain networks;extensive-form game;Smart contracts;Blockchain;Cryptography;Remuneration;Data models;blockchain;smart contract;Ethereum;timed release;security;privacy},
	ISSN={2575-8462},
	month={Oct},
}

@misc{keep,
	title={The Keep Network: A Privacy Layer for Public Blockchains},
	author={Luongo, Matt and Pon, Corbin},
	howpublished = {\url{https://keep.network/whitepaper}},
	year={2019},
	note = {Accessed: 2019-28-01},
}

@misc{kimono-network,
	title={Kimono Time Capsule},
	author={Mert Celebi, Feridun and Fletcher-Hill, Paul and Kaemmer, Graham and Que, Daniel},
	howpublished = {\url{https://kimono.network}},
	year={2018},
	note = {Accessed: 2019-28-01},
}

@InProceedings{motiasymmetric,
	author="Kiayias, Aggelos
	and Yung, Moti",
	editor="Feigenbaum, Joan",
	title="Breaking and Repairing Asymmetric Public-Key Traitor Tracing",
	booktitle="Digital Rights Management",
	year="2003",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="32--50",
	abstract="Traitor tracing schemes are a very useful tool for preventing piracy in digital content distribution systems. A traitor tracing procedure allows the system-manager to reveal the identities of the subscribers that were implicated in the construction of a pirate-device that illegally receives the digital content (called traitors). In an important variant called ``asymmetric'' traitor tracing, the system-manager is not necessarily trusted, thus the tracing procedure must produce undeniable proof of the implication of the traitor subscribers. This non-repudiation property of asymmetric schemes has the potential to significantly increase the effectiveness of the tracing procedure against piracy.",
	isbn="978-3-540-44993-5"
}

@InProceedings{dynamictraitor,
	author="Fiat, Amos
	and Tassa, Tamir",
	editor="Wiener, Michael",
	title="Dynamic Traitor Tracing",
	booktitle="Advances in Cryptology --- CRYPTO' 99",
	year="1999",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="354--371",
	abstract="Traitor tracing schemes were introduced so as to combat the typical piracy scenario whereby pirate decoders (or access control smart-cards) are manufactured and sold by pirates to illegal subscribers. Those traitor tracing schemes, however, are ineffective for the currently less common scenario where a pirate publishes the periodical access control keys on the Internet or, alternatively, simply rebroadcasts the content via an independent pirate network. This new piracy scenario may become especially attractive (to pirates) in the context of broadband multicast over the Internet. In this paper we consider the consequences of this type of piracy and offer countermeasures. We introduce the concept of dynamic traitor tracing which is a practical and efficient tool to combat this type of piracy. We also consider the static watermarking problem, presented by Boneh and Shaw, and derive bounds on the performance parameters of the ``natural majority algorithm''.",
	isbn="978-3-540-48405-9"
}

@INPROCEEDINGS{ddos-payments, 
  author={Mankins, David and Krishnan, Rajesh and Boyd, Ceilyn and Zao, John and Frentz, Michael},
	booktitle={Seventeenth Annual Computer Security Applications Conference}, 
	title={Mitigating distributed denial of service attacks with dynamic resource pricing}, 
	year={2001}, 
	volume={}, 
	number={}, 
	pages={411-421}, 
	abstract={Distributed denial of service (DDoS) attacks exploit the acute imbalance between client and server workloads to cause devastation to the service providers. We propose a distributed gateway architecture and a payment protocol that imposes dynamically changing prices on network, server, and information resources in order to push some cost of initiating service requests - in terms of monetary payments and/or computational burdens back onto the requesting clients. By employing different price and purchase functions, the architecture can provide service quality differentiation and furthermore, select good client behavior and discriminate against adversarial behavior. If confirmed by additional experiments, judicious partitioning of resources using different pricing functions can improve overall service survivability.}, 
	keywords={security of data;telecommunication security;tariffs;client-server systems;internetworking;protocols;quality of service;computer network reliability;Internet;distributed denial of service;DDoS attacks;dynamic resource pricing;distributed gateway architecture;Internet;payment protocol;client server system;purchase functions;service quality differentiation;resource partitioning;service survivability;Computer crime;Pricing;Protocols;Storms;Costs;Web and internet services;Data security;Contracts;Operating systems;Filtering}, 
	ISSN={}, 
	month={Dec},}

@article{ddos-survey,
	title={Protection against denial of service attacks: A survey},
	author={Loukas, Georgios and {\"O}ke, G{\"u}lay},
	journal={The Computer Journal},
	volume={53},
	number={7},
	pages={1020--1037},
	year={2010},
	publisher={OUP}
}

@article{PARKES2008294,
	title = "Practical secrecy-preserving, verifiably correct and trustworthy auctions",
	journal = "Electronic Commerce Research and Applications",
	volume = "7",
	number = "3",
	pages = "294 - 312",
	year = "2008",
	issn = "1567-4223",
	author = "David C. Parkes and Michael O. Rabin and Stuart M. Shieber and Christopher Thorpe",
	keywords = "Auctions, Auction theory, Cryptographic auctions, Cryptography, E-commerce, Electronic transactions, Homomorphic cryptography, Security",
	abstract = "We present a practical protocol based on homomorphic cryptography for conducting provably fair sealed-bid auctions. The system preserves the secrecy of the bids, even after the announcement of auction results, while also providing for public verifiability of the correctness and trustworthiness of the outcome. No party, including the auctioneer, receives any information about bids before the auction closes, and no bidder is able to change or repudiate any bid. The system is illustrated through application to first-price, uniform-price and second-price auctions, including multi-item auctions. Empirical results based on an analysis of a prototype demonstrate the practicality of our protocol for real-world applications."
}

@inproceedings{Garg:2013:WEA:2488608.2488667,
	author = {Garg, Sanjam and Gentry, Craig and Sahai, Amit and Waters, Brent},
	title = {Witness Encryption and Its Applications},
	booktitle = {Proceedings of the Forty-fifth Annual ACM Symposium on Theory of Computing},
	series = {STOC '13},
	year = {2013},
	isbn = {978-1-4503-2029-0},
	location = {Palo Alto, California, USA},
	pages = {467--476},
	numpages = {10},
	acmid = {2488667},
	publisher = {ACM},
	address = {New York, NY, USA},
} 

@INPROCEEDINGS{1437112, 
  author={Chan, Aldar C-F. and Blake, Ian F.},
	booktitle={25th IEEE International Conference on Distributed Computing Systems (ICDCS'05)}, 
	title={Scalable, Server-Passive, User-Anonymous Timed Release Cryptography}, 
	year={2005}, 
	volume={}, 
	number={}, 
	pages={504-513}, 
	abstract={We consider the problem of sending messages into the future, commonly known as timed release cryptography. Existing schemes for this task either solve the relative time problem with uncontrollable, coarse-grained release time (time-lock puzzle approach) or do not provide anonymity to senders and/or receivers and are not scalable (server-based approach). Using a bilinear pairing on any Gap Diffie-Hellman group, we solve this problem by giving scalable, server-passive and user-anonymous timed release public-key encryption schemes allowing precise absolute release time specifications. Unlike the existing server-based schemes, the trusted time server in our scheme is completely passive - no interaction between it and the sender or receiver is needed; it is even not aware of the existence of a user, thus assuring the privacy of a message and the anonymity of both its sender and receiver. Besides, our scheme also has a number of desirable properties including a single form of update for all users, self-authenticated time-bound key updates, and key insulation, making it a scalable and appealing solution. It could also be easily generalized to a more general policy lock mechanism}, 
	keywords={computer networks;data communication;public key cryptography;scalable timed release cryptography;server-passive timed release cryptography;user-anonymous timed release cryptography;relative time problem;uncontrollable release time;coarse-grained release time;time-lock puzzle;server-based approach;bilinear pairing;Gap Diffie-Hellman group;public-key encryption;server-based schemes;time server;self-authenticated key updates;time-bound key updates;key insulation;policy lock;Cryptography;Global Positioning System;Government;Delay;Public key;Privacy;Insulation;Atomic clocks;Distributed computing;Seals}, 
	ISSN={1063-6927}, 
	month={June},}

@InProceedings{10.1007/11889663_17,
	author="Cheon, Jung Hee
	and Hopper, Nicholas
	and Kim, Yongdae
	and Osipkov, Ivan",
	editor="Di Crescenzo, Giovanni
	and Rubin, Avi",
	title="Timed-Release and Key-Insulated Public Key Encryption",
	booktitle="Financial Cryptography and Data Security",
	year="2006",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="191--205",
	abstract="In this paper we consider two security notions related to Identity Based Encryption: Key-insulated public key encryption, introduced by Dodis, Katz, Xu and Yung; and Timed-Release Public Key cryptography, introduced independently by May and Rivest, Shamir and Wagner. We first formalize the notion of secure timed-release public key encryption, and show that, despite several differences in its formulation, it is equivalent to strongly key-insulated public key encryption (with optimal threshold and random access key updates). Next, we introduce the concept of an authenticated timed-release cryptosystem, briefly consider generic constructions, and then give a construction based on a single primitive which is efficient and provably secure.",
	isbn="978-3-540-46256-9"
}

@article{leyton2008essentials,
	title={Essentials of game theory: A concise multidisciplinary introduction},
	author={Leyton-Brown, Kevin and Shoham, Yoav},
	journal={Synthesis lectures on artificial intelligence and machine learning},
	volume={2},
	number={1},
	pages={1--88},
	year={2008},
	publisher={Morgan \& Claypool Publishers}
}

@book{jarvis2015time,
	title={Time capsules: a cultural history},
	author={Jarvis, William E.},
	year={2015},
	publisher={McFarland}
}

@inproceedings{dong2017betrayal,
	title={Betrayal, distrust, and rationality: Smart counter-collusion contracts for verifiable cloud computing},
	author={Dong, Changyu and Wang, Yilei and Aldweesh, Amjad and McCorry, Patrick and van Moorsel, Aad},
	booktitle={Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security},
	pages={211--227},
	year={2017},
	organization={ACM}
}

@inproceedings{feldman1987practical,
  title={A practical scheme for non-interactive verifiable secret sharing},
  author={Feldman, Paul},
  booktitle={28th Annual Symposium on Foundations of Computer Science (sfcs 1987)},
  pages={427--438},
  year={1987},
  organization={IEEE}
}

@inproceedings{rabin1989verifiable,
  title={Verifiable secret sharing and multiparty protocols with honest majority},
  author={Rabin, Tal and Ben-Or, Michael},
  booktitle={Proceedings of the twenty-first annual ACM symposium on Theory of computing},
  pages={73--85},
  year={1989},
  organization={ACM}
}

@inproceedings{albrecht2016mimc,
  title={MiMC: Efficient encryption and cryptographic hashing with minimal multiplicative complexity},
  author={Albrecht, Martin and Grassi, Lorenzo and Rechberger, Christian and Roy, Arnab and Tiessen, Tyge},
  booktitle={International Conference on the Theory and Application of Cryptology and Information Security},
  pages={191--219},
  year={2016}
}

@software{FRESCO-git,
  author = {{Alexandra Institute}},
  title = {{FRESCO} - A {FRamework} for {Efficient} {Secure} {COmputation}},
  note = {\url{https://github.com/aicis/fresco}},
  date = {2019},
}
